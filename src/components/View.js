import React, { useState } from 'react';
import {
  Paper, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, TablePagination,
  FormControl, InputLabel, Select, MenuItem
} from '@mui/material';
import { Delete as DeleteIcon, Edit as EditIcon, FileCopy as FileCopyIcon } from '@mui/icons-material';

function View({ cveRecords, onEdit, onDelete, onCopy }) {
  const [filter, setFilter] = useState({
    cveId: '',
    severity: '',
    cvss: '',
    affectedPackages: '',
    cweId: '',
  });
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(5);

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilter({ ...filter, [name]: value });
  };

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0);
  };

  const filteredRecords = cveRecords.filter((record) =>
    Object.keys(filter).every((key) =>
      record[key].toLowerCase().includes(filter[key].toLowerCase())
    )
  );

  return (
    <div style={{ padding: '20px' }}>
      <h1>View CVE Records</h1>
      <div style={{ marginBottom: '20px', display: 'flex', alignItems: 'center' }}>
        <TextField
          name="cveId"
          label="Filter by CVE-ID"
          variant="outlined"
          style={{ marginRight: '10px' }}
          value={filter.cveId}
          onChange={handleFilterChange}
        />
        <FormControl variant="outlined" style={{ minWidth: '120px', marginRight: '10px' }}>
          <InputLabel>Severity</InputLabel>
          <Select
            name="severity"
            value={filter.severity}
            onChange={handleFilterChange}
            label="Severity"
          >
            <MenuItem value="">None</MenuItem>
            <MenuItem value="low">Low</MenuItem>
            <MenuItem value="medium">Medium</MenuItem>
            <MenuItem value="high">High</MenuItem>
            <MenuItem value="critical">Critical</MenuItem>
          </Select>
        </FormControl>
        <TextField
          name="cvss"
          label="Filter by CVSS"
          variant="outlined"
          style={{ marginRight: '10px' }}
          value={filter.cvss}
          onChange={handleFilterChange}
        />
        <TextField
          name="affectedPackages"
          label="Filter by Affected Packages"
          variant="outlined"
          style={{ marginRight: '10px' }}
          value={filter.affectedPackages}
          onChange={handleFilterChange}
        />
        <TextField
          name="cweId"
          label="Filter by CWE-ID"
          variant="outlined"
          value={filter.cweId}
          onChange={handleFilterChange}
        />
      </div>
      <TableContainer component={Paper}>
        <Table>
          <TableHead>
            <TableRow>
              <TableCell style={{ fontWeight: 'bold' }}>CVE-ID</TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>Severity</TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>CVSS</TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>Affected Packages</TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>CWE-ID</TableCell>
              <TableCell style={{ fontWeight: 'bold' }}>Actions</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {filteredRecords.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((record, index) => (
              <TableRow key={index}>
                <TableCell>{record.cveId}</TableCell>
                <TableCell>{record.severity}</TableCell>
                <TableCell>{record.cvss}</TableCell>
                <TableCell>{record.affectedPackages}</TableCell>
                <TableCell>{record.cweId}</TableCell>
                <TableCell>
                  <IconButton onClick={() => onEdit(index)} color="primary">
                    <EditIcon />
                  </IconButton>
                  <IconButton onClick={() => onDelete(index)} color="secondary">
                    <DeleteIcon />
                  </IconButton>
                  <IconButton onClick={() => onCopy(index)} color="primary">
                    <FileCopyIcon />
                  </IconButton>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
        <TablePagination
          component="div"
          count={filteredRecords.length}
          page={page}
          onPageChange={handleChangePage}
          rowsPerPage={rowsPerPage}
          onRowsPerPageChange={handleChangeRowsPerPage}
        />
      </TableContainer>
    </div>
  );
}

export default View;
